# Generated by Django 4.0.4 on 2023-06-03 00:49

from django.conf import settings
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import karate.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Dojo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_dojo', models.CharField(help_text='Nombre del dojo', max_length=50)),
                ('calle', models.CharField(help_text='Calle', max_length=50)),
                ('numero_exterior', models.CharField(help_text='Calle', max_length=15, verbose_name='Numero exterior')),
                ('numero_interior', models.CharField(blank=True, help_text='Calle', max_length=15, null=True, verbose_name='Numero interior')),
                ('colonia', models.CharField(blank=True, help_text='Colonia', max_length=50, null=True)),
                ('codigo_postal', models.IntegerField()),
                ('ciudad', models.CharField(help_text='Ciudad', max_length=50)),
                ('estado', models.CharField(help_text='Estado', max_length=50)),
                ('ubicacion_maps', models.URLField(verbose_name='Link ubicación maps')),
            ],
        ),
        migrations.CreateModel(
            name='Examen',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_del_examen', models.CharField(help_text='Nombre del exámen', max_length=50)),
                ('fecha_del_examen', models.DateTimeField()),
                ('grado_actual', models.CharField(choices=[('Blanca', 'Blanca'), ('Amarilla', 'Amarilla'), ('Naranja', 'Naranja'), ('Azul', 'Azul'), ('Morada', 'Morada'), ('Verde', 'Verde'), ('Rojo', 'Rojo'), ('Cafe', 'Cafe'), ('Marron', 'Marron'), ('Negra', 'Negra')], default='Blanca', max_length=20)),
                ('grado_seguir', models.CharField(choices=[('Blanca', 'Blanca'), ('Amarilla', 'Amarilla'), ('Naranja', 'Naranja'), ('Azul', 'Azul'), ('Morada', 'Morada'), ('Verde', 'Verde'), ('Rojo', 'Rojo'), ('Cafe', 'Cafe'), ('Marron', 'Marron'), ('Negra', 'Negra')], default='Blanca', help_text='Grado a seguir', max_length=20)),
                ('direccion', models.CharField(help_text='Dirección', max_length=200)),
                ('ubicacion_maps', models.URLField(verbose_name='Link ubicación maps')),
            ],
            options={
                'verbose_name_plural': 'Exámenes',
                'unique_together': {('fecha_del_examen', 'grado_seguir', 'grado_actual')},
            },
        ),
        migrations.CreateModel(
            name='Torneo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_del_torneo', models.CharField(help_text='Nombre del torneo', max_length=50)),
                ('fecha_del_torneo', models.DateTimeField()),
                ('direccion', models.CharField(help_text='Dirección', max_length=200)),
                ('ubicacion_maps', models.URLField(verbose_name='Link ubicación maps')),
            ],
            options={
                'verbose_name_plural': 'Torneos',
                'unique_together': {('nombre_del_torneo', 'fecha_del_torneo')},
            },
        ),
        migrations.CreateModel(
            name='CodigoResgistro',
            fields=[
                ('id', karate.models.ShortUUIDField(editable=False, max_length=8, primary_key=True, serialize=False, unique=True)),
                ('rol', models.CharField(choices=[('Sensei', 'Sensei'), ('Alumno', 'Alumno'), ('Administrador', 'Administrador')], default='Alumno', max_length=20)),
                ('dojo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='karate.dojo')),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('fecha_de_nacimiento', models.DateField(blank=True, null=True)),
                ('estatura', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('peso', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('rol', models.CharField(choices=[('Sensei', 'Sensei'), ('Alumno', 'Alumno'), ('Administrador', 'Administrador')], default='Alumno', max_length=20)),
                ('cinta', models.CharField(choices=[('Blanca', 'Blanca'), ('Amarilla', 'Amarilla'), ('Naranja', 'Naranja'), ('Azul', 'Azul'), ('Morada', 'Morada'), ('Verde', 'Verde'), ('Rojo', 'Rojo'), ('Cafe', 'Cafe'), ('Marron', 'Marron'), ('Negra', 'Negra')], default='Blanca', max_length=20)),
                ('nombre_completo', models.CharField(blank=True, max_length=255)),
                ('is_staff', models.BooleanField(default=True, help_text='Designa si el usuario puede iniciar sesión en el sitio de administración.', verbose_name='staff status')),
                ('numero_telefono', models.CharField(max_length=10, verbose_name='Número de teléfono')),
                ('dojo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='karate.dojo')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ResgistroTorneo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Alumno', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('Torneo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='karate.torneo')),
            ],
            options={
                'verbose_name_plural': 'Registro de Torneos',
                'unique_together': {('Torneo', 'Alumno')},
            },
        ),
        migrations.CreateModel(
            name='ResgistroExamen',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Calificacion', models.DecimalField(blank=True, decimal_places=2, help_text='Calificación', max_digits=4, null=True)),
                ('Alumno', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('Examen', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='karate.examen')),
            ],
            options={
                'verbose_name_plural': 'Registro de Examen',
                'unique_together': {('Examen', 'Alumno')},
            },
        ),
    ]
